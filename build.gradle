
buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.13'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" // querydsl 플러그인 추가
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '1.8'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // h2 추가
    implementation 'com.h2database:h2' // h2 : implementation
    // runtimeOnly 'com.h2database:h2' // h2 : runtimeOnly

    // queryDsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    // 최초 예외 발생 시 , 조상 예외 식별
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    // swagger 2.x.x ver 추가
    implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
    // jpa 외 쿼리 로깅 추가  ,
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0'

    // jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // json
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    // gson
    implementation 'com.google.code.gson:gson:2.8.9'

    implementation 'org.springframework.boot:spring-boot-starter-validation:2.5.4'



}

tasks.named('test') {
    useJUnitPlatform()
}

// querydsl에서 사용할 경로 설정(현재 지정한 부분은 .gitignore에 포함됨)
def querydslDir = "$buildDir/generated/querydsl"

// JPA 사용 여부 및 사용할 경로 설정
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

// build 시 사용할 sourceSet 추가 설정
sourceSets {
    main.java.srcDir querydslDir
}

// querydsl 컴파일 시 사용할 옵션 설정
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

// querydsl이 compileClassPath를 상속하도록 설정
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
